type Query {
  me: User
  user(id: ID!): User
  users(
    first: Int
    last: Int
    before: String
    after: String
    query: String
  ): UserConnection!
}

type User implements Node {
  id: ID!
  username: String!
  email: String!
  gamificationInfo: GamificationInfo!
}

type UserEdge implements Edge {
  cursor: String!
  node: User!
}

type UserConnection implements Connection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

# This should probably be its own type
type GamificationInfo implements Node {
  id: ID!
  rank: String!
}
